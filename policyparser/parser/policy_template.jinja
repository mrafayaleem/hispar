from pyretic.lib.corelib import *
from pyretic.lib.std import *

from pyretic.sdx.lib.common import *

from policyparser.parser.utils import HRange

import json
import os

cwd = os.getcwd()


def parse_config(config_file):
    participants = json.load(open(config_file, 'r'))
    
    for participant_name in participants:
        for i in range(len(participants[participant_name]["IPP"])):
            participants[participant_name]["IPP"][i] = IPPrefix(participants[participant_name]["IPP"][i])
    
    return participants


def policy(participant, fwd):

    {% for item in rule_array %}
    {{ item }}
    {% endfor %}

    participants = parse_config(cwd + "/pyretic/sdx/policies/simple_ip_prefixes/local.cfg")
    
    return (
        (parallel([match(dstip=participants["{{ as_x }}"]["IPP"][i]) for i in range(len(participants["{{ as_x }}"]["IPP"]))]) >> fwd(participant.phys_ports[0]))
        {% for item in policy_list %}
        +
        {{ item }}
        {% endfor %}
    )